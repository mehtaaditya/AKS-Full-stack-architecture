name: Deploy to AKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.CREDENTIAL1 }}
                

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Get AKS Credentials
        run: |
               az aks get-credentials --resource-group AKS --name myAKSCluster
               
      - name: Delete old namespace
        run:  |
               kubectl delete all --all -n default

      - name: Get secret
        run: |
          SECRET_VALUE=$(az keyvault secret show --name servicebus --vault-name vault1019 --query value -o tsv)
  
          # Check if SECRET_VALUE is empty
          if [ -z "$SECRET_VALUE" ]; then
          echo "Error: Failed to retrieve the secret or the secret is empty."
          exit 1
          fi

          # Output the secret value to GitHub Actions environment
          echo "SECRET_VALUE=$SECRET_VALUE" >> $GITHUB_ENV

          # Inform about the success
          echo "Retrieved secret from Azure Key Vault successfully."


      - name: Delete Existing Kubernetes Secret (if exists)
        run: |
            kubectl delete secret order-queue-secret --ignore-not-found


      - name: Create Kubernetes Secret
        run: |
          kubectl create secret generic order-queue-secret \
            --from-literal=ORDER_QUEUE_PASSWORD="${{ env.SECRET_VALUE }}"

      - name: View the Encoded Secret 
        run: |
          kubectl get secret order-queue-secret -o yaml


      - name: Deploy Kubernetes Resources
        run: |
          kubectl apply -f aks-store-quickstart.yaml

      - name: show password
        run: |
              echo "<BASE64_VALUE>" | base64 --decode
              

      - name: Debug Environment
        run: |
          echo "Secret: ${{ env.SECRET_VALUE }}"
    

